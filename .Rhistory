x=3
sentence="Hello World"
print(sentence)
greeting <- "Hello, World!"
my_vector <- c(1, 2, 3, 4)
print(x)
x=3
print(x)
print(p)
print(p)
print(p)
p=72
print(p)
p=72
print(p)
#to install packages (to do only in the console and not in a script file)
#install.packages("package_name")
gc()
rm(list = ls())
library(tidyverse)
library(lubridate)
library(purrr)
library(future)
library(future.apply)
setwd("C:/Users/HOURS/Desktop/PDM/extreme_temperatures_switzerland")
no_covariate_obs_smoothed_quantiles = readRDS("output/no_covariate_quant_models_num_quantiles_30.csv")
obs_data = read.csv("Data/Observed_data/1971_2023_JJA_obs_data_loc_id.csv")
num_quantiles = 50
quantiles_to_estimate = seq(0.001,0.99,length.out = num_quantiles)
#empirical quantiles of obs_data
obs_data_quantile <- obs_data %>%
select(-id) %>%
mutate(year = year(date)) %>%
select(-date) %>%
group_by(stn, year) %>%
summarise(quantiles = list(as.numeric(quantile(maxtp, probs = quantiles_to_estimate, na.rm = TRUE))))
extract_quantile <- function(df){
df_pred_quantiles = df %>%
mutate(quantiles = map(tau_to_temp, ~ sapply(quantiles_to_estimate, .x))) %>%
select(year, stn, quantiles)
}
no_covariate_pred_obs_quantiles <- extract_quantile(no_covariate_obs_smoothed_quantiles)
# Function to calculate Root Mean Squared Error
calculate_rmse <- function(list1, list2) {
if (length(list1) == length(list2)) {
return(sqrt(mean((list1 - list2)^2, na.rm = TRUE)))  # Calculate RMSE
} else {
return(NA)  # Return NA if the lengths are different
}
}
total_rmse <- function(df){
RMSE_df = df%>%
full_join(obs_data_quantile, by = c("stn", "year"), suffix = c("_pred", "_empirical"))
total_rmse <- function(df){
RMSE_df = df%>%
full_join(obs_data_quantile, by = c("stn", "year"), suffix = c("_pred", "_empirical"))
# Calculate the RMSE for corresponding quantile lists
results <- RMSE_df %>%
mutate(rmse = map2_dbl(quantiles_pred, quantiles_empirical, calculate_rmse))
# Sum the RMSE over all years and stations
total_rmse_df <- results %>%
summarise(total_rmse = sqrt(sum(rmse^2, na.rm = TRUE) / sum(!is.na(rmse))))
total_rmse_value <- total_rmse_df$total_rmse
}
break
gc()
rm(list = ls())
library(tidyverse)
library(lubridate)
library(purrr)
library(future)
library(future.apply)
setwd("C:/Users/HOURS/Desktop/PDM/extreme_temperatures_switzerland")
no_covariate_obs_smoothed_quantiles = readRDS("output/no_covariate_quant_models_num_quantiles_30.csv")
obs_data = read.csv("Data/Observed_data/1971_2023_JJA_obs_data_loc_id.csv")
num_quantiles = 50
quantiles_to_estimate = seq(0.001,0.99,length.out = num_quantiles)
#empirical quantiles of obs_data
obs_data_quantile <- obs_data %>%
select(-id) %>%
mutate(year = year(date)) %>%
select(-date) %>%
group_by(stn, year) %>%
summarise(quantiles = list(as.numeric(quantile(maxtp, probs = quantiles_to_estimate, na.rm = TRUE))))
extract_quantile <- function(df){
df_pred_quantiles = df %>%
mutate(quantiles = map(tau_to_temp, ~ sapply(quantiles_to_estimate, .x))) %>%
select(year, stn, quantiles)
}
no_covariate_pred_obs_quantiles <- extract_quantile(no_covariate_obs_smoothed_quantiles)
calculate_rmse <- function(list1, list2) {
if (length(list1) == length(list2)) {
return(sqrt(mean((list1 - list2)^2, na.rm = TRUE)))  # Calculate RMSE
} else {
return(NA)  # Return NA if the lengths are different
}
}
total_rmse <- function(df){
RMSE_df = df%>%
full_join(obs_data_quantile, by = c("stn", "year"), suffix = c("_pred", "_empirical"))
# Calculate the RMSE for corresponding quantile lists
results <- RMSE_df %>%
mutate(rmse = map2_dbl(quantiles_pred, quantiles_empirical, calculate_rmse))
# Sum the RMSE over all years and stations
total_rmse_df <- results %>%
summarise(total_rmse = sqrt(sum(rmse^2, na.rm = TRUE) / sum(!is.na(rmse))))
total_rmse_value <- total_rmse_df$total_rmse
}
rmse_no_covariates = total_rmse(no_covariate_pred_obs_quantiles)
print(rmse_no_covariates)
gc()
rm(list = ls())
library(tidyverse)
library(lubridate)
library(purrr)
library(future)
library(future.apply)
setwd("C:/Users/HOURS/Desktop/PDM/extreme_temperatures_switzerland")
obs_smoothed_quantiles = readRDS("output/quant_models_num_quantiles_30.csv")
obs_data = read.csv("Data/Observed_data/1971_2023_JJA_obs_data_loc_id.csv")
num_quantiles = 50
quantiles_to_estimate = seq(0.001,0.99,length.out = num_quantiles)
#empirical quantiles of obs_data
obs_data_quantile <- obs_data %>%
select(-id) %>%
mutate(year = year(date)) %>%
select(-date) %>%
group_by(stn, year) %>%
summarise(quantiles = list(as.numeric(quantile(maxtp, probs = quantiles_to_estimate, na.rm = TRUE))))
extract_quantile <- function(df){
df_pred_quantiles = df %>%
mutate(quantiles = map(tau_to_temp, ~ sapply(quantiles_to_estimate, .x))) %>%
select(year, stn, quantiles)
}
pred_obs_quantiles <- extract_quantile(obs_smoothed_quantiles)
calculate_rmse <- function(list1, list2) {
if (length(list1) == length(list2)) {
return(sqrt(mean((list1 - list2)^2, na.rm = TRUE)))  # Calculate RMSE
} else {
return(NA)  # Return NA if the lengths are different
}
}
total_rmse <- function(df){
RMSE_df = df%>%
full_join(obs_data_quantile, by = c("stn", "year"), suffix = c("_pred", "_empirical"))
# Calculate the RMSE for corresponding quantile lists
results <- RMSE_df %>%
mutate(rmse = map2_dbl(quantiles_pred, quantiles_empirical, calculate_rmse))
# Sum the RMSE over all years and stations
total_rmse_df <- results %>%
summarise(total_rmse = sqrt(sum(rmse^2, na.rm = TRUE) / sum(!is.na(rmse))))
total_rmse_value <- total_rmse_df$total_rmse
}
rmse_quantiles = total_rmse(pred_obs_quantiles)
print(rmse_quantiles)
gc()
rm(list = ls())
library(tidyverse)
library(lubridate)
library(purrr)
library(future)
library(future.apply)
setwd("C:/Users/HOURS/Desktop/PDM/extreme_temperatures_switzerland")
glob_anom_obs_smoothed_quantiles = readRDS("output/glob_anomaly_quant_models_num_quantiles_30.csv")
obs_data = read.csv("Data/Observed_data/1971_2023_JJA_obs_data_loc_id.csv")
num_quantiles = 50
quantiles_to_estimate = seq(0.001,0.99,length.out = num_quantiles)
#empirical quantiles of obs_data
obs_data_quantile <- obs_data %>%
select(-id) %>%
mutate(year = year(date)) %>%
select(-date) %>%
group_by(stn, year) %>%
summarise(quantiles = list(as.numeric(quantile(maxtp, probs = quantiles_to_estimate, na.rm = TRUE))))
extract_quantile <- function(df){
df_pred_quantiles = df %>%
mutate(quantiles = map(tau_to_temp, ~ sapply(quantiles_to_estimate, .x))) %>%
select(year, stn, quantiles)
}
glob_anom_pred_obs_quantiles <- extract_quantile(glob_anom_obs_smoothed_quantiles)
#the code works because all the lists have the same length
# Function to calculate Root Mean Squared Error
calculate_rmse <- function(list1, list2) {
if (length(list1) == length(list2)) {
return(sqrt(mean((list1 - list2)^2, na.rm = TRUE)))  # Calculate RMSE
} else {
return(NA)  # Return NA if the lengths are different
}
}
total_rmse <- function(df){
RMSE_df = df%>%
full_join(obs_data_quantile, by = c("stn", "year"), suffix = c("_pred", "_empirical"))
# Calculate the RMSE for corresponding quantile lists
results <- RMSE_df %>%
mutate(rmse = map2_dbl(quantiles_pred, quantiles_empirical, calculate_rmse))
# Sum the RMSE over all years and stations
total_rmse_df <- results %>%
summarise(total_rmse = sqrt(sum(rmse^2, na.rm = TRUE) / sum(!is.na(rmse))))
total_rmse_value <- total_rmse_df$total_rmse
}
rmse_glob_anom = total_rmse(glob_anom_pred_obs_quantiles)
print(rmse_glob_anom)
gc()
rm(list = ls())
library(tidyverse)
library(evgam)
setwd("C:/Users/HOURS/Desktop/PDM/extreme_temperatures_switzerland")
num_quantiles = 30
obs_data = readRDS(paste0("Data/processed/obs_data_for_bulk_model_num_quantiles_",num_quantiles,".csv"))
View(obs_data)
